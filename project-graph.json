{
  "graph": {
    "nodes": {
      "dashboard-e2e": {
        "name": "dashboard-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/dashboard-e2e",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": [
                "e2e-ci--src/example.spec.ts",
                "e2e-ci",
                "e2e-ci--merge-reports"
              ]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "apps/dashboard-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "dashboard"
                  ],
                  "target": "serve"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/playwright-report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/dashboard-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "..\\..\\dist\\.playwright\\apps\\dashboard-e2e\\playwright-report\\src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "..\\..\\dist\\.playwright\\apps\\dashboard-e2e\\playwright-report\\src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=..\\..\\dist\\.playwright\\apps\\dashboard-e2e\\test-output\\src-example-spec-ts"
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": [
                    "dashboard"
                  ],
                  "target": "serve"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/test-output/src-example-spec-ts",
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/playwright-report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/test-output",
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/playwright-report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward",
                  "options": "forward"
                }
              ],
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "e2e-ci--merge-reports": {
              "executor": "@nx/playwright:merge-reports",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "@playwright/test"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/.playwright/apps/dashboard-e2e/playwright-report"
              ],
              "options": {
                "config": "playwright.config.ts",
                "expectedSuites": 1
              },
              "metadata": {
                "technologies": [
                  "playwright"
                ],
                "description": "Merges Playwright blob reports from atomized tasks to produce unified reports for the configured reporters."
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/dashboard-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/apps/dashboard-e2e/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "dashboard-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/dashboard-e2e/src",
          "implicitDependencies": [
            "dashboard"
          ],
          "tags": []
        }
      },
      "dashboard": {
        "name": "dashboard",
        "type": "app",
        "data": {
          "root": "apps/dashboard",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "build": {
              "executor": "@angular/build:application",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/dashboard",
                "browser": "apps/dashboard/src/main.ts",
                "polyfills": [
                  "zone.js"
                ],
                "tsConfig": "apps/dashboard/tsconfig.app.json",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "apps/dashboard/public"
                  }
                ],
                "styles": [
                  "apps/dashboard/src/styles.css"
                ],
                "stylePreprocessorOptions": {
                  "includePaths": [
                    "apps/dashboard/src"
                  ]
                }
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "500kb",
                      "maximumError": "1mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "4kb",
                      "maximumError": "8kb"
                    }
                  ],
                  "outputHashing": "all",
                  "fileReplacements": [
                    {
                      "replace": "apps/dashboard/src/environments/environment.ts",
                      "with": "apps/dashboard/src/environments/environment.prod.ts"
                    }
                  ]
                },
                "development": {
                  "optimization": false,
                  "extractLicenses": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "continuous": true,
              "executor": "@angular/build:dev-server",
              "configurations": {
                "production": {
                  "buildTarget": "dashboard:build:production"
                },
                "development": {
                  "buildTarget": "dashboard:build:development"
                }
              },
              "defaultConfiguration": "development",
              "options": {},
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@angular/build:extract-i18n",
              "options": {
                "buildTarget": "dashboard:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/dashboard/jest.config.ts",
                "tsConfig": "apps/dashboard/tsconfig.spec.json",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "dashboard:build",
                "port": 4200,
                "staticFilePath": "dist/apps/dashboard/browser",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "dashboard",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "prefix": "app",
          "sourceRoot": "apps/dashboard/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "api-e2e": {
        "name": "api-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/api-e2e",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{e2eProjectRoot}"
              ],
              "options": {
                "jestConfig": "apps/api-e2e/jest.config.ts",
                "passWithNoTests": true
              },
              "dependsOn": [
                "api:build",
                "api:serve"
              ],
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "api-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "implicitDependencies": [
            "api"
          ],
          "tags": []
        }
      },
      "auth": {
        "name": "auth",
        "type": "lib",
        "data": {
          "root": "libs/auth",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/auth",
                "main": "libs/auth/src/index.ts",
                "tsConfig": "libs/auth/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/auth/jest.config.ts",
                "tsConfig": "libs/auth/tsconfig.spec.json",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "auth",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/auth/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:auth"
          ],
          "implicitDependencies": []
        }
      },
      "data": {
        "name": "data",
        "type": "lib",
        "data": {
          "root": "libs/data",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/data",
                "main": "libs/data/src/index.ts",
                "tsConfig": "libs/data/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "production",
                "^production"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/data/jest.config.ts",
                "tsConfig": "libs/data/tsconfig.spec.json",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "data",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/data/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:data"
          ],
          "implicitDependencies": []
        }
      },
      "api": {
        "name": "api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node --loader @swc-node/register src/main.ts",
                "runCommand": "npm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "nodemon --watch src --ext ts --exec \"node --loader @swc-node/register src/main.ts\"",
                "runCommand": "npm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:unit": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:unit"
              },
              "metadata": {
                "scriptContent": "jest --testPathPattern=spec.ts",
                "runCommand": "npm run test:unit"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:integration"
              },
              "metadata": {
                "scriptContent": "jest --testPathPattern=integration.spec.ts",
                "runCommand": "npm run test:integration"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e"
              },
              "metadata": {
                "scriptContent": "jest --testPathPattern=e2e.spec.ts",
                "runCommand": "npm run test:e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:security": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:security"
              },
              "metadata": {
                "scriptContent": "jest --testPathPattern=security.spec.ts",
                "runCommand": "npm run test:security"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "jest --watch",
                "runCommand": "npm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "jest --coverage",
                "runCommand": "npm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:verbose": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:verbose"
              },
              "metadata": {
                "scriptContent": "jest --verbose",
                "runCommand": "npm run test:verbose"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:debug": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:debug"
              },
              "metadata": {
                "scriptContent": "jest --detectOpenHandles --forceExit",
                "runCommand": "npm run test:debug"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ci"
              },
              "metadata": {
                "scriptContent": "jest --ci --coverage --watchAll=false",
                "runCommand": "npm run test:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:run"
              },
              "metadata": {
                "scriptContent": "typeorm migration:run -d src/database/data-source.ts",
                "runCommand": "npm run migration:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:generate": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:generate"
              },
              "metadata": {
                "scriptContent": "typeorm migration:generate -d src/database/data-source.ts",
                "runCommand": "npm run migration:generate"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:revert": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:revert"
              },
              "metadata": {
                "scriptContent": "typeorm migration:revert -d src/database/data-source.ts",
                "runCommand": "npm run migration:revert"
              },
              "configurations": {},
              "parallelism": true
            },
            "seed": {
              "executor": "nx:run-script",
              "options": {
                "script": "seed"
              },
              "metadata": {
                "scriptContent": "ts-node src/database/seeds/seed.ts",
                "runCommand": "npm run seed"
              },
              "configurations": {},
              "parallelism": true
            },
            "seed:test": {
              "executor": "nx:run-script",
              "options": {
                "script": "seed:test"
              },
              "metadata": {
                "scriptContent": "NODE_ENV=test ts-node src/database/seeds/seed.ts",
                "runCommand": "npm run seed:test"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "webpack-cli build",
                "args": [
                  "--node-env=production"
                ],
                "cwd": "apps/api"
              },
              "configurations": {
                "development": {
                  "args": [
                    "--node-env=development"
                  ]
                }
              },
              "parallelism": true,
              "cache": true
            },
            "prune-lockfile": {
              "dependsOn": [
                "build"
              ],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/dist/apps/api/package.json",
                "{workspaceRoot}/dist/apps/api/package-lock.json"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": [
                "build"
              ],
              "cache": true,
              "outputs": [
                "{workspaceRoot}/dist/apps/api/workspace_modules"
              ],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": [
                "prune-lockfile",
                "copy-workspace-modules"
              ],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project tsconfig.json src/main.ts",
                "cwd": "apps/api"
              },
              "configurations": {
                "watch": {
                  "command": "npx nodemon --watch src --ext ts --exec \"npx ts-node --project tsconfig.json src/main.ts\"",
                  "cwd": "apps/api"
                }
              },
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/api/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "codeCoverage": true
                }
              },
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            }
          },
          "name": "api",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start",
                "dev",
                "test:unit",
                "test:integration",
                "test:e2e",
                "test:security",
                "test:watch",
                "test:coverage",
                "test:verbose",
                "test:debug",
                "test:ci",
                "migration:run",
                "migration:generate",
                "migration:revert",
                "seed",
                "seed:test"
              ]
            },
            "js": {
              "packageName": "rbac-api",
              "packageVersion": "1.0.0",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/api",
          "projectType": "application",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "dashboard-e2e": [
        {
          "source": "dashboard-e2e",
          "target": "dashboard",
          "type": "implicit"
        }
      ],
      "dashboard": [],
      "api-e2e": [
        {
          "source": "api-e2e",
          "target": "api",
          "type": "implicit"
        }
      ],
      "auth": [],
      "data": [],
      "api": []
    }
  }
}